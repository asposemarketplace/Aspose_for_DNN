Aspose DotNetNuke Visual Studio Gallery Templates
These templates are designed for DotNetNuke managed by Aspose http://www.aspose.com

V1.0.0 - Release Date 9/02/2013

What is Aspose DotNetNuke Module Development Template?
========================================================================
Aspose DotNetNuke Module Development Template provides a quick and easy to use Module development template for DotNetNuke 7+ with ability to automatically download selected Aspose components and seamlessly adding them to your DotNetNuke module on the fly.

Aspose DotNetNuke Module Development Template includes the following features

	a) Supports Visual Studio 2010 and Visual Studio 2012
	b) Create DotNetNuke module for C# or VB.NET
	c) Create DotNetNuke module with new DAL2 data access layer available in DotNetNuke 7 for C# or VB.NET
	d) Select one or more Aspose components during module creation
	e) The latest version of each selected Aspose components will automatically be downloaded and referenced in your module.



What is the use of Aspose .NET Products?
========================================================================

Aspose are file format experts and provide APIs and components for various file formats including MS Office, OpenOffice, PDF and Image formats. These APIs are available on a number of development platforms including .NET frameworks – the .NET frameworks starting from version 2.0 are supported. If you are a .NET developer, you can use Aspose’s native .NET APIs in your .NET applications to process various file formats in just a few lines of codes. All the Aspose APIs don’t have any dependency over any other engine. For example, you don’t need to have MS Office installed on the server to process MS Office files.

Below is a list of products we support for .NET developers:

Aspose.Cells for .NET – Using these APIs, the .NET developers can perform simple and complex operations over various spreadsheet formats including MS Excel and OpenOffice spreadsheets. The APIs also provide conversion and rendering features for these file formats.

Aspose.Words for .NET – Using these APIs, the .NET developers can perform simple and complex operations over various word processing formats including MS Word and OpenOffice documents. The APIs also provide conversion and rendering features for these file formats.

Aspose.Slides for .NET – Using these APIs, the .NET developers can perform simple and complex operations over various presentation formats including MS PowerPoint and OpenOffice documents. The APIs also provide conversion and rendering features for these file formats.

Aspose.Pdf for .NET – Using these APIs, the .NET developers can perform simple and complex operations over PDF files. The APIs also provide conversion and rendering features for these file formats.

Aspose.BarCode for .NET – Using these APIs, the .NET developers can generate and recognize a variety of barcode symbologies. Create barcode applications, or add barcodes to documents using these APIs.

Aspose.Email for .NET – Using these APIs, the .NET developers can perform simple and complex operations over various email formats including MS Outlook email formats. The APIs also provide conversion and rendering features for these file formats.

Aspose.OCR for .NET – Using these APIs, the .NET developers can perform OCR operations over images. The APIs hide all the complexities involved with OCR and developers only need to write few lines of codes to call public interfaces exposed by the API.

Aspose.Imaging for .NET – Using these APIs, the .NET developers can create, open, manipulate and save images of various formats.

Aspose.Tasks for .NET – Using these APIs, the .NET developers can create, read, manipulate, convert and save Microsoft Project files. The APIs also provide conversion and rendering features for MS Project file formats.

Aspose.Diagram for .NET – Using these APIs, the .NET developers can work with Microsoft Visio drawing files. The APIs enable developers to quickly create .NET applications for manipulating and converting Microsoft Visio drawing files.


How to use Aspose DotNetNuke Module Development Template?
========================================================================

How to Install the Aspose DotNetNuke Project Templates
------------------------------------------------------------------

Installation of the Aspose DotNetNuke project templates is pretty easy, there are multiple ways to do this, choose one of the three options below and perform the steps listed for the option you choose. You only need to do one of these options, not all three.

1.	Install using the Tools\Extensions and Updates menu or Tools\Extension Manager menu in Visual Studio
	a)	Mouse over the Tools menu
	b)	Click on Extensions and Updates or Extension Manager
	c)	Search for DotNetNuke
	d)	Choose the Install button for the Aspose DotNetNuke Project Templates option
 
2.	Install manually by downloading the VSIX file from the online gallery
	a)	Visit the Visual Studio Gallery – Aspose DotNetNuke Project Templates page
	b)	Download the VSIX file via the Download link.
	c)	Double click on the downloaded file to install the templates.

3.	Install manually by downloading from Codeplex
	a)	Download the VSIX file from Codeplex
	b)	Double click on the downloaded file to install the templates.

Please make sure to restart your Visual Studio for changes to take effect.


Creating a DotNetNuke Module using the Templates
------------------------------------------------------------------

Once you’ve installed the templates, you can setup a project based on the templates. To do so you should follow the steps below
1.	(you should have this done already) Install Visual Studio 2012 or Visual Studio 2010
2.	(you should have this done already) Install Aspose DotNetNuke Project Templates using above instructions.
3.	Setup your DotNetNuke Development environment following the steps listed here in the Wiki (the templates assume you have your development environment setup at http://dnndev.me/). Development Environment
4.	Run Visual Studio 2012 or Visual Studio 2010 as an Administrator (right click on the shortcut to do so)
5.	File –> New Project
6.	Choose either C# or VB.Net from the Languages section of the new project dialog
7.	Select the DotNetNuke Folder under your preferred language (C# or Visual Basic)
8.	Choose either Aspose DotNetNuke C# Compiled Module or Aspose DotNetNuke 7 C# DAL2 Compiled Module template for your project template (or the VB.NET versions)
9.	For the new project creation screen using the following settings
	a)	Name: ModuleName (something unique here, example DNNTaskManager)
	b)	Location: c:\websites\dnndev.me\desktopmodules\ (this assumes you setup your development environment as instructed in Step 3)
	c)	Solution: Create new solution
	d)	Create directory for solution : Unchecked (this will cause path problems if checked, the templates assume the SLN is in the same folder as the project file)
	e)	Click OK
10.	A screen will be shown containing all Aspose components (screenshot shown below). Please select one or more components from the list; you can see common uses against each component upon selection. Click Next to continue once done
 
11.	The Next screen will show download progress for each selected component. 
 
12.	Once the downloading is completed the module will be created and will have the selection components automatically referenced

This will create a folder under c:\websites\dnndev.me\desktopmodules\ModuleName and should contain all of the files necessary for your module, including the Solution. There are a couple of next steps just to finalize the process, these steps are documented in the Documentation\Documentation.html file, which should open up automatically in Visual Studio after your project gets created, follow these steps to configure the final project properties, then you are ready to build/deploy your module. You can delete the documentation folder once you have completed those steps.
